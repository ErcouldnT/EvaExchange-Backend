// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Share {
  id              Int              @id @default(autoincrement())
  symbol          String           @unique @db.Char(3)
  name            String?
  lastPrice       Decimal          @db.Money
  totalQty        Int
  // marketCap      Float
  exchanges       Exchange[]
  portfolioShares PortfolioShare[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

enum TransactionType {
  BUY
  SELL
}

model Exchange {
  id        Int             @id @default(autoincrement())
  type      TransactionType
  quantity  Int
  cost      Decimal         @db.Money
  share     Share           @relation(fields: [shareId], references: [id])
  shareId   Int
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  email     String     @unique
  password  String
  funds     Decimal    @default(0) @db.Money
  portfolio Portfolio?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Portfolio {
  id              Int              @id @default(autoincrement())
  user            User             @relation(fields: [userId], references: [id])
  userId          Int              @unique
  totalValue      Decimal          @db.Money
  portfolioShares PortfolioShare[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model PortfolioShare {
  id          Int       @id @default(autoincrement())
  share       Share     @relation(fields: [shareId], references: [id])
  shareId     Int
  totalOwnQty Int
  totalCost   Decimal   @db.Money
  rateOfShare Decimal   @db.Decimal(10, 2)
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
